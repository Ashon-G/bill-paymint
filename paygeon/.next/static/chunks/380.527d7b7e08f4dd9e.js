"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[380],{8380:function(e,t,r){r.r(t),r.d(t,{MoonPayBuyWidget:function(){return q},MoonPayConsumerKycWidget:function(){return C},MoonPayContext:function(){return S},MoonPayNftCheckoutWidget:function(){return P},MoonPayNftClaimWidget:function(){return k},MoonPayProvider:function(){return h},MoonPaySellWidget:function(){return L},MoonPaySwapWidget:function(){return $},MoonPaySwapsCustomerSetupWidget:function(){return W},MoonPayTopUpLedgerWidget:function(){return j},MoonPayTransactionTrackerWidget:function(){return E},MoonPayWithdrawLedgerWidget:function(){return T}});var n=r(8078),a=r(7821),s="moonpay-react-sdk-embedded-frame",i=({props:e,apiKey:t,debug:r,environment:n,signature:a})=>{let{currencyCode:i,defaultCurrencyCode:o,walletAddress:u,walletAddressTag:l,walletAddresses:d,walletAddressTags:c,colorCode:g,theme:x,themeId:m,language:f,baseCurrencyCode:v,baseCurrencyAmount:p,quoteCurrencyAmount:y,lockAmount:w,email:b,externalTransactionId:S,externalCustomerId:h,paymentMethod:N,redirectURL:M,showAllCurrencies:R,showOnlyCurrencies:U,showWalletAddressForm:q,unsupportedRegionRedirectUrl:C,skipUnsupportedRegionScreen:P,baseOrigin:k,onAuthToken:L,onInitiateDeposit:W,onKmsWalletsCreated:$,onLogin:j,onTransactionCompleted:E,onUnsupportedRegion:T,onSwapsCustomerSetupComplete:_,onCloseOverlay:A,onTransactionCreated:K,auth:D,useWarnBeforeRefresh:B,overlayNode:F}=e;return{flow:"buy",variant:e.variant,environment:n,params:{apiKey:t,signature:a,currencyCode:i,defaultCurrencyCode:o,walletAddress:u,walletAddressTag:l,walletAddresses:d,walletAddressTags:c,colorCode:g,theme:x,themeId:m,language:f,baseCurrencyCode:v,baseCurrencyAmount:p,quoteCurrencyAmount:y,lockAmount:w,email:b,externalTransactionId:S,externalCustomerId:h,paymentMethod:N,redirectURL:M,showAllCurrencies:R,showOnlyCurrencies:U,showWalletAddressForm:q,unsupportedRegionRedirectUrl:C,skipUnsupportedRegionScreen:P,baseOrigin:k},debug:r,handlers:{onAuthToken:L,onInitiateDeposit:W,onKmsWalletsCreated:$,onLogin:j,onTransactionCompleted:E,onUnsupportedRegion:T,onSwapsCustomerSetupComplete:_,onCloseOverlay:A,onTransactionCreated:K},auth:D,useWarnBeforeRefresh:B,containerNodeSelector:`#${s}`,overlayNode:F}},o=({props:e,apiKey:t,debug:r,environment:n,signature:a})=>{let{quoteCurrencyCode:i,defaultCurrencyCode:o,defaultBaseCurrencyCode:u,walletAddress:l,walletAddressTag:d,walletAddresses:c,walletAddressTags:g,colorCode:x,theme:m,themeId:f,language:v,baseCurrencyCode:p,baseCurrencyAmount:y,quoteCurrencyAmount:w,lockAmount:b,email:S,externalTransactionId:h,externalCustomerId:N,paymentMethod:M,redirectURL:R,showAllCurrencies:U,showOnlyCurrencies:q,showWalletAddressForm:C,unsupportedRegionRedirectUrl:P,skipUnsupportedRegionScreen:k,mpWalletId:L,baseOrigin:W,onAuthToken:$,onInitiateDeposit:j,onKmsWalletsCreated:E,onLogin:T,onTransactionCompleted:_,onUnsupportedRegion:A,onSwapsCustomerSetupComplete:K,onCloseOverlay:D,onTransactionCreated:B,auth:F,useWarnBeforeRefresh:V}=e;return{flow:"sell",variant:e.variant,environment:n,params:{apiKey:t,signature:a,quoteCurrencyCode:i,defaultCurrencyCode:o,defaultBaseCurrencyCode:u,walletAddress:l,walletAddressTag:d,walletAddresses:c,walletAddressTags:g,colorCode:x,theme:m,themeId:f,language:v,baseCurrencyCode:p,baseCurrencyAmount:y,quoteCurrencyAmount:w,lockAmount:b,email:S,externalTransactionId:h,externalCustomerId:N,paymentMethod:M,redirectURL:R,showAllCurrencies:U,showOnlyCurrencies:q,showWalletAddressForm:C,unsupportedRegionRedirectUrl:P,skipUnsupportedRegionScreen:k,mpWalletId:L,baseOrigin:W},debug:r,handlers:{onAuthToken:$,onInitiateDeposit:j,onKmsWalletsCreated:E,onLogin:T,onTransactionCompleted:_,onUnsupportedRegion:A,onSwapsCustomerSetupComplete:K,onCloseOverlay:D,onTransactionCreated:B},auth:F,useWarnBeforeRefresh:V,containerNodeSelector:`#${s}`}},u=({props:e,apiKey:t,debug:r,environment:n})=>{let{amount:a,amountCurrencyCode:i,theme:o,themeId:u,externalCustomerId:l,baseOrigin:d,onAuthToken:c,onLogin:g,onInitiateDeposit:x,onSwapsCustomerSetupComplete:m,onCloseOverlay:f,onTransactionCreated:v,onKmsWalletsCreated:p,onTransactionCompleted:y,onUnsupportedRegion:w,auth:b,useWarnBeforeRefresh:S}=e;return{flow:"swapsCustomerSetup",variant:e.variant,environment:n,params:{apiKey:t,amount:a,amountCurrencyCode:i,theme:o,themeId:u,externalCustomerId:l,baseOrigin:d},debug:r,handlers:{onAuthToken:c,onLogin:g,onInitiateDeposit:x,onSwapsCustomerSetupComplete:m,onCloseOverlay:f,onTransactionCreated:v,onKmsWalletsCreated:p,onTransactionCompleted:y,onUnsupportedRegion:w},auth:b,useWarnBeforeRefresh:S,containerNodeSelector:`#${s}`}},l=({props:e,apiKey:t,debug:r,environment:n})=>{let{amount:a,amountCurrencyCode:i,theme:o,themeId:u,baseOrigin:l,onLogin:d,onInitiateDeposit:c,onConsumerKycComplete:g,onKmsWalletsCreated:x,onTransactionCompleted:m,onUnsupportedRegion:f,onCloseOverlay:v,auth:p,useWarnBeforeRefresh:y}=e;return{flow:"consumerKyc",variant:e.variant,environment:n,params:{apiKey:t,amount:a,amountCurrencyCode:i,theme:o,themeId:u,baseOrigin:l},debug:r,handlers:{onLogin:d,onInitiateDeposit:c,onConsumerKycComplete:g,onKmsWalletsCreated:x,onTransactionCompleted:m,onUnsupportedRegion:f,onCloseOverlay:v},auth:p,useWarnBeforeRefresh:y,containerNodeSelector:`#${s}`}},d=({props:e,apiKey:t,debug:r,environment:n,signature:a})=>{let{contractAddress:i,tokenId:o,listingId:u,externalTransactionId:l,baseCurrencyCode:d,redirectURL:c,walletAddress:g,subPartnerName:x,metadata:m,dynamicAssetInfo:f,sellType:v,email:p,quantity:y,baseOrigin:w,onAuthToken:b,onLogin:S,onTransactionCompleted:h,onUnsupportedRegion:N,onInitiateDeposit:M,onKmsWalletsCreated:R,onCloseOverlay:U,onTransactionCreated:q,auth:C,useWarnBeforeRefresh:P}=e;return{flow:"nft",variant:e.variant,environment:n,params:{apiKey:t,signature:a,contractAddress:i,tokenId:o,listingId:u,externalTransactionId:l,baseCurrencyCode:d,redirectURL:c,walletAddress:g,subPartnerName:x,metadata:m,dynamicAssetInfo:f,sellType:v,email:p,quantity:y,baseOrigin:w},debug:r,handlers:{onAuthToken:b,onLogin:S,onTransactionCompleted:h,onUnsupportedRegion:N,onInitiateDeposit:M,onKmsWalletsCreated:R,onCloseOverlay:U,onTransactionCreated:q},auth:C,useWarnBeforeRefresh:P,containerNodeSelector:`#${s}`}},c=({props:e,apiKey:t,debug:r,environment:n,signature:a})=>{let{contractId:i,tokenId:o,initialScreen:u,onAuthToken:l,onLogin:d,onTransactionCompleted:c,onUnsupportedRegion:g,onInitiateDeposit:x,onKmsWalletsCreated:m,onCloseOverlay:f,onTransactionCreated:v,baseOrigin:p,auth:y,useWarnBeforeRefresh:w}=e;return{flow:"claim",variant:e.variant,environment:n,params:{apiKey:t,signature:a,contractId:i,tokenId:o,initialScreen:u,baseOrigin:p},debug:r,handlers:{onAuthToken:l,onLogin:d,onTransactionCompleted:c,onUnsupportedRegion:g,onInitiateDeposit:x,onKmsWalletsCreated:m,onCloseOverlay:f,onTransactionCreated:v},auth:y,useWarnBeforeRefresh:w,containerNodeSelector:`#${s}`}},g=({props:e,apiKey:t,debug:r,environment:n,signature:a})=>{let{externalCustomerId:i,theme:o,themeId:u,currencyCode:l,baseOrigin:d,onAuthToken:c,onInitiateDeposit:g,onKmsWalletsCreated:x,onLogin:m,onTransactionCompleted:f,onUnsupportedRegion:v,onSwapsCustomerSetupComplete:p,onCloseOverlay:y,onTransactionCreated:w,auth:b,useWarnBeforeRefresh:S}=e;return{flow:"topup",variant:e.variant,environment:n,params:{apiKey:t,signature:a,externalCustomerId:i,theme:o,themeId:u,currencyCode:l,baseOrigin:d},debug:r,handlers:{onAuthToken:c,onInitiateDeposit:g,onKmsWalletsCreated:x,onLogin:m,onTransactionCompleted:f,onUnsupportedRegion:v,onSwapsCustomerSetupComplete:p,onCloseOverlay:y,onTransactionCreated:w},auth:b,useWarnBeforeRefresh:S,containerNodeSelector:`#${s}`}},x=({props:e,apiKey:t,debug:r,environment:n,signature:a})=>{let{externalCustomerId:i,theme:o,themeId:u,baseCurrencyCode:l,baseOrigin:d,onAuthToken:c,onInitiateDeposit:g,onKmsWalletsCreated:x,onLogin:m,onTransactionCompleted:f,onUnsupportedRegion:v,onSwapsCustomerSetupComplete:p,onCloseOverlay:y,onTransactionCreated:w,auth:b,useWarnBeforeRefresh:S}=e;return{flow:"withdraw",variant:e.variant,environment:n,params:{apiKey:t,signature:a,externalCustomerId:i,theme:o,themeId:u,baseCurrencyCode:l,baseOrigin:d},debug:r,handlers:{onAuthToken:c,onInitiateDeposit:g,onKmsWalletsCreated:x,onLogin:m,onTransactionCompleted:f,onUnsupportedRegion:v,onSwapsCustomerSetupComplete:p,onCloseOverlay:y,onTransactionCreated:w},auth:b,useWarnBeforeRefresh:S,containerNodeSelector:`#${s}`}},m=({props:e,apiKey:t,debug:r,environment:n,signature:a})=>{let{walletAddress:i,walletAddressTag:o,refundWalletAddress:u,baseCurrencyCode:l,baseCurrencyAmount:d,quoteCurrencyCode:c,quoteCurrencyAmount:g,colorCode:x,theme:m,themeId:f,externalCustomerId:v,baseOrigin:p,onAuthToken:y,onInitiateDeposit:w,onKmsWalletsCreated:b,onLogin:S,onTransactionCompleted:h,onUnsupportedRegion:N,onSwapsCustomerSetupComplete:M,onCloseOverlay:R,onTransactionCreated:U,auth:q,useWarnBeforeRefresh:C}=e;return{flow:"swap",variant:e.variant,environment:n,params:{apiKey:t,signature:a,walletAddress:i,walletAddressTag:o,refundWalletAddress:u,baseCurrencyCode:l,baseCurrencyAmount:d,quoteCurrencyCode:c,quoteCurrencyAmount:g,colorCode:x,theme:m,themeId:f,externalCustomerId:v,baseOrigin:p},debug:r,handlers:{onAuthToken:y,onInitiateDeposit:w,onKmsWalletsCreated:b,onLogin:S,onTransactionCompleted:h,onUnsupportedRegion:N,onSwapsCustomerSetupComplete:M,onCloseOverlay:R,onTransactionCreated:U},auth:q,useWarnBeforeRefresh:C,containerNodeSelector:`#${s}`}},f=({props:e,debug:t,environment:r})=>{let{transactionId:n,colorCode:a,theme:i,themeId:o,baseOrigin:u,onAuthToken:l,onInitiateDeposit:d,onKmsWalletsCreated:c,onLogin:g,onTransactionCompleted:x,onUnsupportedRegion:m,onSwapsCustomerSetupComplete:f,onCloseOverlay:v,onTransactionCreated:p,auth:y,useWarnBeforeRefresh:w}=e;return{flow:"transactionTracker",variant:e.variant,environment:r,params:{transactionId:n,colorCode:a,theme:i,themeId:o,baseOrigin:u},debug:t,handlers:{onAuthToken:l,onInitiateDeposit:d,onKmsWalletsCreated:c,onLogin:g,onTransactionCompleted:x,onUnsupportedRegion:m,onSwapsCustomerSetupComplete:f,onCloseOverlay:v,onTransactionCreated:p},auth:y,containerNodeSelector:`#${s}`,useWarnBeforeRefresh:w}},v={isLoading:!1,isLoaded:!1,startTime:0};async function p(e="v1"){return new Promise((t,r)=>{let n=`https://static.moonpay.com/web-sdk/${e}/moonpay-web-sdk.min.js`;if(document.querySelector(`script[src="${n}"]`)){v.isLoaded?t(window.MoonPayWebSdk?.init):v.isLoading&&(Date.now()-v.startTime>1e4?r(Error("Loading MoonPayWebSdk script timed out.")):setTimeout(()=>t(p(e)),100));return}v.isLoading=!0,v.startTime=Date.now();let a=document.createElement("script");a.async=!0,a.src=n,a.addEventListener("load",()=>{v.isLoading=!1,v.isLoaded=!0,t(window.MoonPayWebSdk?.init)}),a.addEventListener("error",()=>{v.isLoading=!1,v.isLoaded=!1,r(Error("Failed to load MoonPayWebSdk script."))}),document.body.appendChild(a)})}var y=()=>void 0,w={info:y,warn:y,error:y},b=class e{prefix;logger;constructor({logger:e,prefix:t}){this.logger=e,this.prefix=t??["Logger"]}if(t){return t?this:new e({logger:w})}info(...e){this.logger.info(`[${this.prefix}]`,...e)}warn(...e){this.logger.warn(`[${this.prefix}]`,...e)}error(...e){this.logger.error(`[${this.prefix}]`,...e)}};void 0!==window.crypto&&void 0!==window.crypto.getRandomValues||(()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,e=>{let t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)}));var S=(0,n.createContext)({apiKey:"",environment:"sandbox",debug:!1}),h=({children:e,apiKey:t,debug:r=!1})=>{let s=t.startsWith("pk_live")?"production":"sandbox",[i,o]=(0,n.useState)({apiKey:t,environment:s,debug:r}),u=(0,n.useCallback)(async()=>{let e=await p();o(t=>({...t,init:e}))},[o]);return(0,n.useEffect)(()=>{i.init||u()},[u,i.init]),(0,a.jsx)(S.Provider,{value:i,children:e})},N=class extends b{constructor(){super({logger:console,prefix:["MoonPay React SDK"]})}},M=(e,t,r)=>{let a=(0,n.useRef)(null),{init:s,debug:i}=(0,n.useContext)(S),o=(0,n.useRef)(new N().if(i||!1)),u=(0,n.useCallback)(async()=>{if(a.current){if(!r&&("walletAddress"in e||"walletAddresses"in e)&&o.current.warn("You must provide an `onUrlSignatureRequested` function to sign the URL when using the `walletAddress` or `walletAddresses` prop"),r){let e=a.current.generateUrlForSigning();try{let t=await r?.(e);if(!t)return;a.current?.updateSignature(t)}catch(e){o.current.error("Something went wrong calling the provided `onUrlSignatureRequested` function:",e)}}t&&a.current?.show()}},[r,t,e]);(0,n.useEffect)(()=>{a.current&&a.current.close();let t=s?.(e)||null;a.current=t,u()},[s,e,u])},R={width:"424px",height:"576px",margin:"32px 28px 32px 28px",border:"1px solid #E5E7EB",borderRadius:"16px",overflow:"hidden"};function U({config:e,onUrlSignatureRequested:t,visible:r=!0,className:n,style:i}){return(M(e,r,t),r)?(0,a.jsx)("div",{id:s,className:n,style:"embedded"===e.variant?{...R,...i}:void 0}):null}function q(e){let{apiKey:t,environment:r}=(0,n.useContext)(S),s=(0,n.useMemo)(()=>i({props:e,apiKey:t,environment:r,debug:!1,signature:e.signature||""}),[e,t,r]);return(0,a.jsx)(U,{config:s,visible:e.visible,onUrlSignatureRequested:e.onUrlSignatureRequested,className:e.className,style:e.style})}function C(e){let{apiKey:t,environment:r}=(0,n.useContext)(S),s=(0,n.useMemo)(()=>l({props:e,apiKey:t,environment:r,debug:!1,signature:""}),[e,t,r]);return(0,a.jsx)(U,{config:s,visible:e.visible,onUrlSignatureRequested:e.onUrlSignatureRequested,className:e.className,style:e.style})}function P(e){let{apiKey:t,environment:r}=(0,n.useContext)(S),s=(0,n.useMemo)(()=>d({props:e,apiKey:t,environment:r,debug:!1,signature:e.signature||""}),[e,t,r]);return(0,a.jsx)(U,{config:s,visible:e.visible,onUrlSignatureRequested:e.onUrlSignatureRequested,className:e.className,style:e.style})}function k(e){let{apiKey:t,environment:r}=(0,n.useContext)(S),s=(0,n.useMemo)(()=>c({props:e,apiKey:t,environment:r,debug:!1,signature:e.signature||""}),[e,t,r]);return(0,a.jsx)(U,{config:s,visible:e.visible,onUrlSignatureRequested:e.onUrlSignatureRequested,className:e.className,style:e.style})}function L(e){let{apiKey:t,environment:r}=(0,n.useContext)(S),s=(0,n.useMemo)(()=>o({props:e,apiKey:t,environment:r,debug:!1,signature:e.signature||""}),[e,t,r]);return(0,a.jsx)(U,{config:s,visible:e.visible,onUrlSignatureRequested:e.onUrlSignatureRequested,className:e.className,style:e.style})}function W(e){let{apiKey:t,environment:r}=(0,n.useContext)(S),s=(0,n.useMemo)(()=>u({props:e,apiKey:t,environment:r,debug:!1,signature:""}),[e,t,r]);return(0,a.jsx)(U,{config:s,visible:e.visible,onUrlSignatureRequested:e.onUrlSignatureRequested,className:e.className,style:e.style})}function $(e){let{apiKey:t,environment:r}=(0,n.useContext)(S),s=(0,n.useMemo)(()=>m({props:e,apiKey:t,environment:r,debug:!1,signature:e.signature||""}),[e,t,r]);return(0,a.jsx)(U,{config:s,visible:e.visible,onUrlSignatureRequested:e.onUrlSignatureRequested,className:e.className,style:e.style})}function j(e){let{apiKey:t,environment:r}=(0,n.useContext)(S),s=(0,n.useMemo)(()=>g({props:e,apiKey:t,environment:r,debug:!1,signature:e.signature||""}),[e,t,r]);return(0,a.jsx)(U,{config:s,visible:e.visible,onUrlSignatureRequested:e.onUrlSignatureRequested,className:e.className,style:e.style})}function E(e){let{apiKey:t,environment:r}=(0,n.useContext)(S),s=(0,n.useMemo)(()=>f({props:e,apiKey:t,environment:r,debug:!1,signature:""}),[e,t,r]);return(0,a.jsx)(U,{config:s,visible:e.visible,onUrlSignatureRequested:e.onUrlSignatureRequested,className:e.className,style:e.style})}function T(e){let{apiKey:t,environment:r}=(0,n.useContext)(S),s=(0,n.useMemo)(()=>x({props:e,apiKey:t,environment:r,debug:!1,signature:e.signature||""}),[e,t,r]);return(0,a.jsx)(U,{config:s,visible:e.visible,onUrlSignatureRequested:e.onUrlSignatureRequested,className:e.className,style:e.style})}}}]);